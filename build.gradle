buildscript {
    def buildNumber = System.getenv("BUILD_NUMBER") as Integer ?: 1

    ext {
        versionMajor = 1
        versionMinor = 0
        versionPatch = 0

        versionBuild = buildNumber
        versionCode = versionMajor * 10000000 + versionMinor * 100000 + versionPatch * 1000 + versionBuild
        versionName = "$versionMajor.$versionMinor.$versionPatch"

        minSdkVersion = 21
        targetSdkVersion = 34
        compileSdkVersion = 34

        versions = [
                // Platform
                compose                       : "2023.06.01",

                // AndroidX
                activityCompose               : "1.8.2",
                core                          : "1.12.0",
                lifecycle                     : "2.7.0",

                // Other
                composeKotlinCompilerExtension: "1.5.5",
                junit                         : "4.13.2",
                reachard                      : "2.0.1",
        ]
    }
}

plugins {
    id "com.android.application" version "8.2.2" apply false
    id "com.android.library" version "8.2.2" apply false
    id "org.jetbrains.kotlin.android" version "1.9.20" apply false
}

subprojects { project ->
    afterEvaluate {
        if (project.plugins.hasPlugin("com.android.library") || project.plugins.hasPlugin("com.android.application")) {
            project.android {
                compileSdk project.rootProject.compileSdkVersion

                buildTypes.configureEach {
                    consumerProguardFiles "consumer-rules.pro"
                }

                compileOptions {
                    sourceCompatibility JavaVersion.VERSION_17
                    targetCompatibility JavaVersion.VERSION_17
                }

                defaultConfig {
                    minSdk rootProject.minSdkVersion
                    targetSdk rootProject.targetSdkVersion

                    consumerProguardFiles("consumer-proguard-rules.pro")
                }

                kotlinOptions {
                    jvmTarget = JavaVersion.VERSION_17
                }

                publishing {
                    singleVariant("release") {
                        withSourcesJar()
                        withJavadocJar()
                    }
                }
            }
        }

        if (project.plugins.hasPlugin("com.android.library")) {
            project.publishing {
                publications {
                    maven(MavenPublication) {
                        artifactId project.name

                        afterEvaluate {
                            from components.release
                        }
                    }
                }
            }
        }
    }
}
